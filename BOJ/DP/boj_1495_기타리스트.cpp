#include <iostream>

using namespace std;

/*
<문제>

V[i]는 i번째 곡을 연주하기 전에 바꿀 수 있는 볼륨
즉, 현재 볼륨이 P이고 지금 i번째 곡을 연주하기 전이라면, i번 곡은 P+V[i]나 P-V[i] 로 연주

마지막 곡을 연주할 수 있는 볼륨 중 최댓값을 구하라

<접근>

(1)
모든 볼륨 조절 경우를 다 따져보자
-> 완전탐색 재귀 사용
-> 볼륨을 줄이거나 높이거나 두가지로 나누어 짐
-> O(2^N) -> O(2^100) -> 너무 큰 것 같다

(2)
모든 볼륨 조절 경우를 다 따지지 말고 볼륨의 범위가 정해져 있으므로 (0 <= 볼륨 <= M)
가능한 볼륨들만 저장하면서 다음곡으로 넘어가보자
-> 곡마다 가능한 볼륨의 최대 개수가 2개이므로 (N * 2) 이차배열 사용
-> O(N) -> O(100)

-> 필요한 값을 저장함으로써 완탐 재귀를 사용했을 경우 불필요한 연산을 안하게 되므로 dp

<error>

모든곡의 가능한 볼륨의 수가 꼭 2가지가 아님
예를 들어
1번 볼륨 -> 5 -> 1가지
2번 볼륨(V[2]=1) -> 3,4 -> 2가지
3번 볼륨(V[3]=1) -> 2,4 / 3,5 -> 4가지

(3)

따라서 정해진 볼륨 중(0 <= 볼륨 <= M) 에서 가능한 볼륨인지 아닌지 저장
(N*M) 2차 배열(bool)사용

-> O(N*M) -> O(100*1000) -> O(100000)

<error>

첫번째 볼륨도 허용범위 안에 드는지 판별하고 넣어줘야하는데 간과했음

*/

int N, S, M; // N : 곡의 수, S : 시작볼륨, M
int V[101];
bool dp[101][1001];

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    cin >> N >> S >> M;

    for (int i = 1; i <= N; i++)
    {
        cin >> V[i];
    }

    // 첫번째 볼륨 허용 범위 안에 들면 기록
    if (S + V[1] <= M)
    {
        dp[1][S + V[1]] = true;
        // cout << 1 << " : " << S + V[1] << "\n";
    }
    if (S - V[1] >= 0)
    {
        dp[1][S - V[1]] = true;
        // cout << 1 << " : " << S - V[1] << "\n";
    }

    for (int i = 2; i <= N; i++)
    {
        for (int j = 0; j <= M; j++)
        {
            if (dp[i - 1][j] == true) // 전곡의 가능한 볼륨을 찾음
            {
                if (j + V[i] <= M) // 이전곡 볼륨(i) + 현재곡에서 조절가능한 볼륨치(V[j]) 가 허용 범위 안에 들면 기록
                {
                    dp[i][j + V[i]] = true;
                    // cout << i << " : " << j + V[i] << "\n";
                }
                if (j - V[i] >= 0)
                {
                    dp[i][j - V[i]] = true;
                    // cout << i << " : " << j - V[i] << "\n";
                }
            }
        }
    }

    // 마지막 곡을 연주할 수 있는 볼륨 중 최댓값
    for (int i = M; i >= 0; i--)
    {
        if (dp[N][i] == true)
        {
            cout << i;
            return 0;
        }
    }
    // 만약 마지막 곡을 연주할 수 없다면 (중간에 볼륨 조절을 할 수 없다면) -1을 출력
    cout << "-1";

    return 0;
}